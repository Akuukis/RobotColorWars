pastebin run m1Tnt0wv Start
for i=1,4 do Jobs.MineH(8);	Nav.TurnLeft(); Nav.Step("Normal"); Nav.TurnLeft() end
print(coroutine.yield({ ["Flag"] = "TuCoWa_Call", ["Function"] = Logger.Info, ["Args"] = {"itialized!\n\n"} }))
for i=1,list.getInventorySize() do list.pushItem("west",i) end
for i=1,16 do list.pullItem("west",i) end
Jobs.MineH(48,12,true)


constDirNames = {"north","east","south","west","up","down"}; Slot = 2; Chest = peripheral.wrap("front"); for i = 1,6 do print(Chest.pullItem(constDirNames[i],Slot,64,1)) end


Chest = peripheral.wrap("front"); for i = 1,Chest.getInventorySize() do if (Chest.getStackInSlot(i) or 0) == 0 then ChestSlot = i end end; print(ChestSlot)


Nav.Go(); Nav.TurnAround(); coroutine.yield("_UpdateAPI",{"Jobs"}); Jobs.MineH(8,8,true)

print(Chest.pushItem("east",1,64,1))
print("kuku")
Nav.Go({1,1,2},{1,-1,1},{1,2,1})
Nav.GoNextTo({3,0,2},"Careful")
sleep(2);sleep(2)

sleep(3); print("kuku")
for n,v in pairs(Init.clsTurtle) do print(n,": ", v) end

x = coroutine.yield({ ["Flag"] = "TuCoWa_Call", ["Function"] = function () while true do turtle.turnRight(); sleep(3) end end })
coroutine.yield({ ["Flag"] = "TuCoWa_Kill", ["Id"] = x })
y = coroutine.yield({ ["Flag"] = "TuCoWa_Call", ["Function"] = function () while true do turtle.turnLeft() end end })
	

    for j=1,5 do
      for i=1,36 do
        turtle.forward()
        turtle.digDown()
        if turtle.getItemCount(turtle.getSelectedSlot) == 1 then
          turtle.select(turtle.getSelectedSlot() + 1)
        end
        turtle.placeDown()
      end
      if j%2==0 then
        turtle.turnLeft()
        turtle.forward()
        turtle.turnLeft()
      else
        turtle.turnRight()
        turtle.forward()
        turtle.turnRight()
      end
    end

