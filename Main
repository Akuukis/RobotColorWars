path = select(1,...)
if path == nil then path = "" end

os.loadAPI(path .. "Logger")
os.loadAPI(path .. "Logic")
os.loadAPI(path .. "Nav")
os.loadAPI(path .. "Stats")
os.loadAPI(path .. "Utils")
os.loadAPI(path .. "Rui")
os.loadAPI(path .. "Comm")
os.loadAPI(path .. "Gui")
os.loadAPI(path .. "Hud")
os.loadAPI(path .. "Jobs")

function init()
	Nav.UpdateMap({0,0,0},false)
end

function loop()
	Logger.PrintMap()
	Utils.Refuel()
	Utils.printf("\n>")
	str = loadstring(io.read())
	
	--[[
	Logger.Check("\nNeighbors:")	
	for f=0,5 do Logger.Debug("(F%s,%s,%s,%s)",f, Nav.GetPos(pos,f,"x"), Nav.GetPos(pos,f,"z"), Nav.GetPos(pos,f,"y")) end
	Logger.Check("\n") --]]
	
	if str() then
		Utils.printfs("Failed or exceeded tries!\n")
	else
		Utils.printfs("Succeeded!\n")
	end
	
	pos = Nav.GetPos()
	Utils.printf(" Coords: (%s,%s,%s), F:%s\n",Nav.GetPos("x"),Nav.GetPos("z"),Nav.GetPos("y"),Nav.GetPos("f"))
end

init()
while true do
	loop()
end