{
    ["thread"] = {
      files = {
            ["master/lib/thread.lua"] = "/lib",
            ["master/usr/man/thread"] = "/man",
            ["master/usr/man/thread.ask"] = "/man",
            ["master/usr/man/thread.demonstration"] = "/man",
            ["master/usr/man/thread.dig"] = "/man",
            ["master/usr/man/thread.examples"] = "/man",
            ["master/usr/man/thread.exit"] = "/man",
            ["master/usr/man/thread.getAlarm"] = "/man",
            ["master/usr/man/thread.getAnswer"] = "/man",
            ["master/usr/man/thread.getFilter"] = "/man",
            ["master/usr/man/thread.getName"] = "/man",
            ["master/usr/man/thread.getThread"] = "/man",
            ["master/usr/man/thread.getThreads"] = "/man",
            ["master/usr/man/thread.kill"] = "/man",
            ["master/usr/man/thread.manager"] = "/man",
            ["master/usr/man/thread.pause"] = "/man",
            ["master/usr/man/thread.properties"] = "/man",
            ["master/usr/man/thread.setAlarm"] = "/man",
            ["master/usr/man/thread.setAnswer"] = "/man",
            ["master/usr/man/thread.setFilter"] = "/man",
            ["master/usr/man/thread.setName"] = "/man",
            ["master/usr/man/thread.spawn"] = "/man",
            ["master/usr/man/thread.unpause"] = "/man",
            ["master/usr/man/thread.whisper"] = "/man",
            ["master/usr/man/thread.yield"] = "/man",
      },
      dependencies = {
      },
        name = "Parallel Thread Library",
        description = "Parallel Thread Library - threads can spawn, manipulate, kill and do even more. Independent (doesn't need even OpenOS). Manual included.",
        authors = "Akuukis",
        note = "Any thread can sleep, filter, answer to requests and spawn, put to sleep, put filter, kill, gather return values, pause, unpause or send exclusive signals to any thread. Manual included at /usr/man. Bundled with simple console. Load & execute thread.manager(), all parameters are optional. See man/thread.demonstration for 'copy/paste' tour around library.",
        repo="tree/master",
    },
    ["nav"] = {
      files = {
            ["master/lib/nav.lua"] = "/lib",
            ["master/usr/man/nav"] = "/man",
            ["master/usr/man/nav.drawMap"] = "/man",
            ["master/usr/man/nav.getMap"] = "/man",
            ["master/usr/man/nav.getPos"] = "/man",
            ["master/usr/man/nav.go"] = "/man",
            ["master/usr/man/nav.goNextTo"] = "/man",
            ["master/usr/man/nav.new"] = "/man",
            ["master/usr/man/nav.putMap"] = "/man",
            ["master/usr/man/nav.setPos"] = "/man",
            ["master/usr/man/nav.step"] = "/man",
            ["master/usr/man/nav.stepDown"] = "/man",
            ["master/usr/man/nav.stepUp"] = "/man",
            ["master/usr/man/nav.turnAround"] = "/man",
            ["master/usr/man/nav.turnLeft"] = "/man",
            ["master/usr/man/nav.turnRight"] = "/man",
            ["master/usr/man/nav.turnTo"] = "/man",
      },
      dependencies = {
      },
        name = "Navigation",
        description = "Navigation BETA - use go(coords) to pathfind, go, map everything along the way and more. Independent (doesn't need even OpenOS). Manual included. Video presentation at http://youtu.be/9P5eJZLDWl0",
        authors = "Akuukis",
        note = "Navigation library combines safe movement, pathfinding and world mapping into its core function go(). It is build with memory restrictions taken into account and aimed for general purpose use from solving little labyrinths to mapping and tagging whole regions. Pathfinding is bi-directional A* algorithm that supports 3D world, unexplored & changing map, multiple & weighted targets, weighted nodes, special tags, turning cost, succeeds even if runs into 'out-of-memory' few times during thinking, and lots of options are changable through extra flags.",
        repo="tree/master",
    },
}
